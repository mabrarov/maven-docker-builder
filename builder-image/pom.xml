<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.mabrarov.maven-docker-builder</groupId>
        <artifactId>maven-docker-builder</artifactId>
        <version>0.0.1</version>
    </parent>

    <artifactId>builder-image</artifactId>
    <packaging>pom</packaging>

    <properties>
        <docker.repository>${builder.image.repository}</docker.repository>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-cmake</id>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <url>https://github.com/Kitware/CMake/releases/download/v${cmake.version}/cmake-${cmake.version}-Linux-x86_64.tar.gz</url>
                            <sha256>${cmake.sha256}</sha256>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <outputFileName>cmake.tar.gz</outputFileName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-boost</id>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <url>https://dl.bintray.com/mabrarov/generic/boost/${boost.version}/boost-${boost.version}-x64-gcc9.tar.gz</url>
                            <sha256>${boost.sha256}</sha256>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <outputFileName>boost.tar.gz</outputFileName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-docker-context</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>context</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <attach>false</attach>
                            <descriptors>
                                <descriptor>src/assembly/docker-context.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <execution>
                        <id>archive-docker-context</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/source.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <name>${docker.repository}:${project.version}</name>
                            <build>
                                <contextDir>${project.build.directory}/context</contextDir>
                                <cleanup>${docker.cleanup}</cleanup>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>build-docker-image</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>